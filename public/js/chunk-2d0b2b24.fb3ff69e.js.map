{"version":3,"sources":["webpack:///./src/views/components/extra-components/clipboard/Clipboard.vue","webpack:///./src/views/components/extra-components/clipboard/ClipboardDirective.vue","webpack:///src/views/components/extra-components/clipboard/ClipboardDirective.vue","webpack:///./src/views/components/extra-components/clipboard/ClipboardDirective.vue?5a05","webpack:///./src/views/components/extra-components/clipboard/ClipboardDirective.vue?6f72","webpack:///./src/views/components/extra-components/clipboard/ClipboardWithoutDirective.vue","webpack:///src/views/components/extra-components/clipboard/ClipboardWithoutDirective.vue","webpack:///./src/views/components/extra-components/clipboard/ClipboardWithoutDirective.vue?8729","webpack:///./src/views/components/extra-components/clipboard/ClipboardWithoutDirective.vue?1dc7","webpack:///src/views/components/extra-components/clipboard/Clipboard.vue","webpack:///./src/views/components/extra-components/clipboard/Clipboard.vue?2f09","webpack:///./src/views/components/extra-components/clipboard/Clipboard.vue?edd1"],"names":["render","_vm","this","_c","_self","attrs","staticRenderFns","staticClass","model","value","text","callback","$$v","expression","directives","name","rawName","arg","onCopy","onError","_v","slot","data","methods","title","color","iconPack","position","icon","component","text2","on","copyText","thisIns","components","ClipboardDirective","ClipboardWithoutDirective"],"mappings":"yHAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,MAAM,CAAC,GAAK,wBAAwB,CAACF,EAAG,uBAAuBA,EAAG,gCAAgC,IAE3KG,EAAkB,GCFlBN,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,UAAU,CAACE,MAAM,CAAC,MAAQ,kBAAkB,SAAW,uCAAuC,eAAe,KAAK,CAACF,EAAG,WAAW,CAACI,YAAY,wBAAwBC,MAAM,CAACC,MAAOR,EAAIS,KAAMC,SAAS,SAAUC,GAAMX,EAAIS,KAAKE,GAAKC,WAAW,UAAUV,EAAG,YAAY,CAACW,WAAW,CAAC,CAACC,KAAK,YAAYC,QAAQ,mBAAmBP,MAAOR,EAAIS,KAAMG,WAAW,OAAOI,IAAI,QAAQ,CAACF,KAAK,YAAYC,QAAQ,sBAAsBP,MAAOR,EAAIiB,OAAQL,WAAW,SAASI,IAAI,WAAW,CAACF,KAAK,YAAYC,QAAQ,oBAAoBP,MAAOR,EAAIkB,QAASN,WAAW,UAAUI,IAAI,WAAW,CAAChB,EAAImB,GAAG,wBAAwBjB,EAAG,WAAW,CAACkB,KAAK,iBAAiB,CAACpB,EAAImB,GAAG,whCAAuhC,IAEpuDd,EAAkB,GC+DP,GACfgB,KADA,WAEA,OACAZ,iBAGAa,SACAL,OADA,WAEA,iBACAM,gBACAd,gCACAe,gBACAC,mBACAC,sBACAC,4BAGAT,QAXA,WAYA,iBACAK,eACAd,6BACAe,eACAC,mBACAC,sBACAC,8BCzFyY,I,YCOrYC,EAAY,eACd,EACA,EACA,GACA,EACA,KACA,KACA,MAIa,EAAAA,E,QClBX7B,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,UAAU,CAACE,MAAM,CAAC,MAAQ,oBAAoB,SAAW,gGAAgG,eAAe,KAAK,CAACF,EAAG,WAAW,CAACI,YAAY,wBAAwBC,MAAM,CAACC,MAAOR,EAAI6B,MAAOnB,SAAS,SAAUC,GAAMX,EAAI6B,MAAMlB,GAAKC,WAAW,WAAWV,EAAG,YAAY,CAAC4B,GAAG,CAAC,MAAQ9B,EAAI+B,WAAW,CAAC/B,EAAImB,GAAG,UAAUjB,EAAG,WAAW,CAACkB,KAAK,iBAAiB,CAACpB,EAAImB,GAAG,6mCAA4mC,IAEhlDd,EAAkB,GCuDP,GACfgB,KADA,WAEA,OACAQ,oCAGAP,SACAS,SADA,WAEA,WACA,4CACAC,cACAT,gBACAd,gCACAe,gBACAC,mBACAC,sBACAC,8BAEA,WACAK,cACAT,eACAd,6BACAe,eACAC,mBACAC,sBACAC,iCClFgZ,ICO5Y,EAAY,eACd,EACA,EACA,GACA,EACA,KACA,KACA,MAIa,I,QCGf,GACAM,YACAC,qBACAC,8BCxBgY,ICO5X,EAAY,eACd,EACApC,EACAM,GACA,EACA,KACA,KACA,MAIa,e","file":"js/chunk-2d0b2b24.fb3ff69e.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"page-clipboard-demo\"}},[_c('clipboard-directive'),_c('clipboard-without-directive')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('vx-card',{attrs:{\"title\":\"Using Directive\",\"subtitle\":\"Use directive on button to copy text\",\"code-toggler\":\"\"}},[_c('vs-input',{staticClass:\"inline-flex mb-2 mr-2\",model:{value:(_vm.text),callback:function ($$v) {_vm.text=$$v},expression:\"text\"}}),_c('vs-button',{directives:[{name:\"clipboard\",rawName:\"v-clipboard:copy\",value:(_vm.text),expression:\"text\",arg:\"copy\"},{name:\"clipboard\",rawName:\"v-clipboard:success\",value:(_vm.onCopy),expression:\"onCopy\",arg:\"success\"},{name:\"clipboard\",rawName:\"v-clipboard:error\",value:(_vm.onError),expression:\"onError\",arg:\"error\"}]},[_vm._v(\"\\n      Copy\\n    \")]),_c('template',{slot:\"codeContainer\"},[_vm._v(\"\\n<template>\\n    <vs-input v-model=\\\"text\\\" class=\\\"inline-flex\\\" />\\n    <vs-button\\n        v-clipboard:copy=\\\"text\\\"\\n        v-clipboard:success=\\\"onCopy\\\"\\n        v-clipboard:error=\\\"onError\\\">\\n        Copy\\n    </vs-button>\\n</template>\\n\\n<script>\\nexport default {\\n    data() {\\n        return {\\n            text: 'Copy Me!',\\n        }\\n    },\\n    methods: {\\n        onCopy() {\\n            this.$vs.notify({\\n                title: 'Success',\\n                text: 'Text copied successfully',\\n                color: 'success',\\n                iconPack: 'feather',\\n                position: 'top-center',\\n                icon: 'icon-check-circle'\\n            })\\n        },\\n        onError() {\\n            this.$vs.notify({\\n                title: 'Failed',\\n                text: 'Error in copying text',\\n                color: 'danger',\\n                iconPack: 'feather',\\n                position: 'top-center',\\n                icon: 'icon-alert-circle'\\n            })\\n        },\\n    }\\n}\\n</script>\\n    \")])],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!-- =========================================================================================\n  File Name: ClipboardDirective.vue\n  Description: Clipboard demo\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n<template>\n  <vx-card title=\"Using Directive\" subtitle=\"Use directive on button to copy text\" code-toggler>\n    <vs-input v-model=\"text\" class=\"inline-flex mb-2 mr-2\" />\n    <vs-button\n      v-clipboard:copy=\"text\"\n      v-clipboard:success=\"onCopy\"\n      v-clipboard:error=\"onError\">\n      Copy\n    </vs-button>\n    <template slot=\"codeContainer\">\n&lt;template&gt;\n    &lt;vs-input v-model=&quot;text&quot; class=&quot;inline-flex&quot; /&gt;\n    &lt;vs-button\n        v-clipboard:copy=&quot;text&quot;\n        v-clipboard:success=&quot;onCopy&quot;\n        v-clipboard:error=&quot;onError&quot;&gt;\n        Copy\n    &lt;/vs-button&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n    data() {\n        return {\n            text: 'Copy Me!',\n        }\n    },\n    methods: {\n        onCopy() {\n            this.$vs.notify({\n                title: 'Success',\n                text: 'Text copied successfully',\n                color: 'success',\n                iconPack: 'feather',\n                position: 'top-center',\n                icon: 'icon-check-circle'\n            })\n        },\n        onError() {\n            this.$vs.notify({\n                title: 'Failed',\n                text: 'Error in copying text',\n                color: 'danger',\n                iconPack: 'feather',\n                position: 'top-center',\n                icon: 'icon-alert-circle'\n            })\n        },\n    }\n}\n&lt;/script&gt;\n    </template>\n  </vx-card>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      text: 'Copy Me'\n    }\n  },\n  methods: {\n    onCopy () {\n      this.$vs.notify({\n        title: 'Success',\n        text: 'Text copied successfully',\n        color: 'success',\n        iconPack: 'feather',\n        position: 'top-center',\n        icon:'icon-check-circle'\n      })\n    },\n    onError () {\n      this.$vs.notify({\n        title: 'Failed',\n        text: 'Error in copying text',\n        color: 'danger',\n        iconPack: 'feather',\n        position: 'top-center',\n        icon:'icon-alert-circle'\n      })\n    }\n  }\n}\n</script>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ClipboardDirective.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ClipboardDirective.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ClipboardDirective.vue?vue&type=template&id=924a5684&\"\nimport script from \"./ClipboardDirective.vue?vue&type=script&lang=js&\"\nexport * from \"./ClipboardDirective.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('vx-card',{attrs:{\"title\":\"Without directive\",\"subtitle\":\"You can copy text without a specific button. Use $copyText to copy text when event got fired.\",\"code-toggler\":\"\"}},[_c('vs-input',{staticClass:\"inline-flex mb-2 mr-2\",model:{value:(_vm.text2),callback:function ($$v) {_vm.text2=$$v},expression:\"text2\"}}),_c('vs-button',{on:{\"click\":_vm.copyText}},[_vm._v(\"Copy\")]),_c('template',{slot:\"codeContainer\"},[_vm._v(\"\\n<template>\\n    <vs-input v-model=\\\"text2\\\" class=\\\"inline-flex\\\" />\\n    <vs-button @click=\\\"copyText\\\">Copy</vs-button>\\n</template>\\n\\n<script>\\nexport default {\\n    data() {\\n        return {\\n            text2: 'Copy Me Without Directive',\\n        }\\n    },\\n    methods: {\\n        copyText() {\\n            const thisIns = this;\\n            this.$copyText(this.text2).then(function() {\\n                thisIns.$vs.notify({\\n                    title: 'Success',\\n                    text: 'Text copied successfully',\\n                    color: 'success',\\n                    iconPack: 'feather',\\n                    position: 'top-center',\\n                    icon: 'icon-check-circle'\\n                })\\n            }, function() {\\n                thisIns.$vs.notify({\\n                    title: 'Failed',\\n                    text: 'Error in copying text',\\n                    color: 'danger',\\n                    iconPack: 'feather',\\n                    position: 'top-center',\\n                    icon: 'icon-alert-circle'\\n                })\\n            })\\n        }\\n    }\\n}\\n</script>\\n    \")])],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!-- =========================================================================================\n  File Name: ClipboardWithoutDirective.vue\n  Description: Clipboard demo without directive\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n<template>\n  <vx-card title=\"Without directive\" subtitle=\"You can copy text without a specific button. Use $copyText to copy text when event got fired.\" code-toggler>\n    <vs-input v-model=\"text2\" class=\"inline-flex mb-2 mr-2\" />\n    <vs-button @click=\"copyText\">Copy</vs-button>\n    <template slot=\"codeContainer\">\n&lt;template&gt;\n    &lt;vs-input v-model=&quot;text2&quot; class=&quot;inline-flex&quot; /&gt;\n    &lt;vs-button @click=&quot;copyText&quot;&gt;Copy&lt;/vs-button&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n    data() {\n        return {\n            text2: 'Copy Me Without Directive',\n        }\n    },\n    methods: {\n        copyText() {\n            const thisIns = this;\n            this.$copyText(this.text2).then(function() {\n                thisIns.$vs.notify({\n                    title: 'Success',\n                    text: 'Text copied successfully',\n                    color: 'success',\n                    iconPack: 'feather',\n                    position: 'top-center',\n                    icon: 'icon-check-circle'\n                })\n            }, function() {\n                thisIns.$vs.notify({\n                    title: 'Failed',\n                    text: 'Error in copying text',\n                    color: 'danger',\n                    iconPack: 'feather',\n                    position: 'top-center',\n                    icon: 'icon-alert-circle'\n                })\n            })\n        }\n    }\n}\n&lt;/script&gt;\n    </template>\n  </vx-card>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      text2: 'Copy Me Without Directive'\n    }\n  },\n  methods: {\n    copyText () {\n      const thisIns = this\n      this.$copyText(this.text2).then(function () {\n        thisIns.$vs.notify({\n          title: 'Success',\n          text: 'Text copied successfully',\n          color: 'success',\n          iconPack: 'feather',\n          position: 'top-center',\n          icon: 'icon-check-circle'\n        })\n      }, function () {\n        thisIns.$vs.notify({\n          title: 'Failed',\n          text: 'Error in copying text',\n          color: 'danger',\n          iconPack: 'feather',\n          position: 'top-center',\n          icon: 'icon-alert-circle'\n        })\n      })\n    }\n  }\n}\n</script>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ClipboardWithoutDirective.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ClipboardWithoutDirective.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ClipboardWithoutDirective.vue?vue&type=template&id=2dec19c2&\"\nimport script from \"./ClipboardWithoutDirective.vue?vue&type=script&lang=js&\"\nexport * from \"./ClipboardWithoutDirective.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<!-- =========================================================================================\n    File Name: Clipboard.vue\n    Description: Clipboard demo\n    ----------------------------------------------------------------------------------------\n    Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n      Author: Pixinvent\n    Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n\n<template>\n    <div id=\"page-clipboard-demo\">\n        <clipboard-directive></clipboard-directive>\n        <clipboard-without-directive></clipboard-without-directive>\n    </div>\n</template>\n\n<script>\nimport ClipboardDirective from './ClipboardDirective.vue'\nimport ClipboardWithoutDirective from './ClipboardWithoutDirective.vue'\n\nexport default{\n  components: {\n    ClipboardDirective,\n    ClipboardWithoutDirective\n  }\n}\n</script>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Clipboard.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Clipboard.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Clipboard.vue?vue&type=template&id=ab24c3f8&\"\nimport script from \"./Clipboard.vue?vue&type=script&lang=js&\"\nexport * from \"./Clipboard.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}